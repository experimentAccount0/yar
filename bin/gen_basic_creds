#!/usr/bin/env python
"""What's the real problem this script is trying to solve?
Was trying to:

1/ explore how database size grows as a function of number
of sets of credentials
2/ run load tests with key stores containing a reasonable
data shape
3/ explore how credential retrieval time is affected by
the number of sets of credentials

The problem was that generating credentials and loading up
databases with lots of credentials takes a while. So the
solution was to pre-generate CouchDB databases with
preloaded credentials."""

import os
import sys
import uuid

import yar.util.basic

if __name__ == "__main__":

    if 2 != len(sys.argv):
        fmt = "usage: %s <number of creds>"
        print fmt % os.path.split(sys.argv[0])[1]
        sys.exit(1)

    number_of_creds = int(sys.argv[1])

    print '{"docs": ['

    fmt = (
        '{"_id": "%s", '
        '"principal": "%s@example.com", '
        '"type": "creds_v1.0", '
        '"is_deleted": false, '
        '"basic": {'
        '"api_key": "%s"'
        '}'
        '}%s'
    )
    for i in range(0, number_of_creds):
        api_key = yar.util.basic.APIKey.generate()
        principal = str(uuid.uuid4()).replace("-", "")
        comma_or_nothing = "" if i == (number_of_creds - 1) else ","
        print fmt % (api_key, principal, api_key, comma_or_nothing)

    print ']}'
