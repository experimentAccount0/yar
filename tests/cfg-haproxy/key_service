global
    # http://cbonte.github.io/haproxy-dconv/configuration-1.4.html#daemon
    daemon
    # http://cbonte.github.io/haproxy-dconv/configuration-1.4.html#nbproc
    # ensure only 1 process is created when going daemon
    nbproc 1

    log 127.0.0.1 local0 info
    maxconn 2000
    # http://cbonte.github.io/haproxy-dconv/configuration-1.4.html#user
    user haproxy
    group haproxy

defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    retries 3
    option redispatch
    timeout connect  5000
    timeout client  10000
    timeout server  10000

listen key_service_lb 0.0.0.0:8070
    # http://cbonte.github.io/haproxy-dconv/configuration-1.5.html#mode
    mode http

    #
    # the following few statements make statistics reporting
    # available @ http://127.0.0.1:8070/haproxy?stats (user name = yar
    # and password = yar) from a browser running on the machine
    # running the VirtualBox that runs the load tests
    #
    # how's the above possible? with a bit of config detail
    #
    # 1/ in util.sh:create_key_service_lb tells the docker
    # container in which haproxy is running to forward traffic
    # on port 8070 from the VirtualBox hosting the container
    # to the container
    #
    # 2/ the Vagrantfile used to spin up the VirtualBox contains
    # the following line
    #
    #   config.vm.network "forwarded_port", guest: 8070, host: 8070
    #
    # which forwards all traffic on port 8070 of the machine running
    # VirtualBox to be directed to VirtualBox's port 8070
    #

    # http://cbonte.github.io/haproxy-dconv/configuration-1.5.html#stats%20enable
    stats enable
    # http://cbonte.github.io/haproxy-dconv/configuration-1.5.html#stats%20uri
    stats uri /key_service_lb?stats
    # http://cbonte.github.io/haproxy-dconv/configuration-1.5.html#stats%20realm
    stats realm yar
    # http://cbonte.github.io/haproxy-dconv/configuration-1.5.html#stats%20auth
    stats auth yar:yar

    balance roundrobin

    option httpclose
    option forwardfor
