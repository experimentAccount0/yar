#!/bin/bash
#-------------------------------------------------------------------------------
#
# A wrapper around cURL that adds HTTP Authorization header
# as per the "OAuth 2.0 Message Authentication Code (MAC) Tokens"
# (http://tools.ietf.org/html/draft-ietf-oauth-v2-http-mac-02) spec
# and then issues a request to a yar Auth Server.
#
# Credits
# -- the mktemp usage pattern to ensure portability across Mac OS X and Ubunutu
# comes from http://unix.stackexchange.com/questions/30091/fix-or-alternative-for-mktemp-in-os-x
#
#-------------------------------------------------------------------------------

usage() {
    echo "usage: `basename $0` [-v] [GET|POST|PUT|DELETE|OPTIONS|HEAD|PATCH] <uri>"
}

VERBOSE=0
if [ 2 -lt $# ]; then
    if [ "-v" == $1 ]; then
        VERBOSE=1
        shift
    fi
fi

if [ $# != 2 ]; then
    usage
    exit 1
fi

if [ "$YAR_CREDS" == "" ]; then
    YAR_CREDS=~/.yar.creds
fi

if [ ! -f $YAR_CREDS ]; then
    echo "`basename $0`: can't read from creds file '$YAR_CREDS'"
    exit 1
fi

SCRIPTDIR="$( cd "$( dirname "$0" )" && pwd )"

HTTP_METHOD=`echo $1 | awk '{print toupper($0)}'`
case "$HTTP_METHOD" in
        GET|OPTIONS|HEAD|DELETE)
            CONTENT_TYPE=""
            COPY_OF_STDIN=/dev/null
            ;;
        PUT|POST|PATCH)
            CONTENT_TYPE="application/json; charset=utf-8"
            COPY_OF_STDIN=`mktemp 2> /dev/null || mktemp -t DAS`
            cat /dev/stdin > $COPY_OF_STDIN
            ;;
        *)
            usage
            exit 1
esac

get_creds() {
    grep "^\\s*$1\\s*=" $YAR_CREDS | sed -e "s/^\\s*$1\\s*=\s*//"
}

MAC_KEY_IDENTIFIER=`get_creds MAC_KEY_IDENTIFIER`
if [ "$MAC_KEY_IDENTIFIER" == "" ]; then
    echo "`basename $0` could not find mac key identifier"
    exit 1
fi

MAC_KEY=`get_creds MAC_KEY`
if [ "$MAC_KEY" == "" ]; then
    echo "`basename $0` could not find mac key"
    exit 1
fi
MAC_KEY=$(echo -n $MAC_KEY | sed -e "s/\-/\+/g" | sed -e "s/\_/\//g")=
MAC_KEY=$(echo -n $MAC_KEY | base64 --decode)

MAC_ALGORITHM=`get_creds MAC_ALGORITHM`
if [ "$MAC_ALGORITHM" == "" ]; then
    echo "`basename $0` could not find mac algorithm"
    exit 1
fi

URL=$(echo $2 | sed -e "s/^\\s*//")

SCHEME=$(echo $URL | sed -e "s/:.*//")

HOST=$(echo $URL | sed -e "s/^$SCHEME\:\/\///")
HOST=$(echo $HOST | sed -e "s/:.*$//")

PORT=$(echo $URL | sed -e "s/^$SCHEME\:\/\/$HOST\://")
PORT=$(echo $PORT | sed -e "s/\/.*//")

URI=$(echo $URL | sed -e "s/^$SCHEME\:\/\/$HOST\:$PORT//")
if [ "$URI" == "" ]; then
	URI="/"
fi

TIMESTAMP=$(date +%s)
NONCE=$(openssl rand -hex 16)

get_ext() {
    CONTENT_TYPE=${1:-}
    COPY_OF_STDIN=${2:-}
    if [ "$CONTENT_TYPE" == "" ] || [ "$COPY_OF_STDIN" == "" ]; then
        echo ""
    else
        CONTENT_TYPE_PLUS_COPY_OF_STDIN=`mktemp 2> /dev/null || mktemp -t DAS`
        echo -n $CONTENT_TYPE > $CONTENT_TYPE_PLUS_COPY_OF_STDIN
        cat $COPY_OF_STDIN >> $CONTENT_TYPE_PLUS_COPY_OF_STDIN
        openssl sha1 < $CONTENT_TYPE_PLUS_COPY_OF_STDIN
        rm $CONTENT_TYPE_PLUS_COPY_OF_STDIN
    fi
}
EXT=$(get_ext "$CONTENT_TYPE" "$COPY_OF_STDIN")

NRS=`mktemp 2> /dev/null || mktemp -t DAS`
printf \
    '%s\n%s\n%s\n%s\n%s\n%s\n%s\n' \
    $TIMESTAMP \
    $NONCE \
    $HTTP_METHOD \
    $URI \
    $HOST \
    $PORT \
    $EXT >& $NRS
MAC=$(openssl dgst -sha1 -hmac "$MAC_KEY" < $NRS | sed -e "s/^.*=\s*//g")
rm -f $NRS >& /dev/null

printf \
    -v AUTH_HEADER_VALUE \
    'MAC id=\"%s\", ts=\"%s\", nonce=\"%s\", ext=\"%s\", mac=\"%s\"' \
    "$MAC_KEY_IDENTIFIER" \
    "$TIMESTAMP" \
    "$NONCE" \
    "$EXT" \
    "$MAC"

if [ $VERBOSE -eq 1 ]; then
    CURL_VERBOSE=-v
else
    CURL_VERBOSE=""
fi

if [ "" != "$CONTENT_TYPE" ]; then
    CURL_CMD="curl
        -s
        $CURL_VERBOSE
        -X $HTTP_METHOD
        -H \"Authorization: \$AUTH_HEADER_VALUE\"
        -H \"Content-Type: $CONTENT_TYPE\"
        --data-binary @$COPY_OF_STDIN
       $URL"
else
    CURL_CMD="curl
        -s
        $CURL_VERBOSE
        -X $HTTP_METHOD
        -H \"Authorization: \$AUTH_HEADER_VALUE\"
       $URL"
fi

echo "dave"
eval $CURL_CMD
echo "here"

exit 0

#------------------------------------------------------------------- End-of-File
