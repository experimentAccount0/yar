#!/usr/bin/env python

# exit values
#   0   ok
#   1   command line args error
#   2   error building an image
#   3   error connecting to docker daemon

import os
import sys

import docker
import requests.exceptions

class DockerClient(object):

    def __init__(self):
        object.__init__(self)

        self._docker_client = docker.Client(
            base_url='unix://var/run/docker.sock',
            version='1.6',
            timeout=10)

    def build(self, sub_directory_name, tag):

        print "Building '%s'" % tag

        directory_name = os.path.join(
            os.path.split(sys.argv[0])[0],
            sub_directory_name)

        try:
            (image_id, steps) = self._docker_client.build(
                path=directory_name,
                tag=tag)
        except requests.exceptions.ConnectionError as ex:
            print "*" * 80
            print "Error building '%s'" % tag
            print "-- error connecting to docker daemon"
            print "-- is the daemon running?"
            print "-- was '%s' run with sudo?" % os.path.split(sys.argv[0])[1]
            print "*" * 80
            sys.exit(3)

        if image_id:
            print "Successfully built '%s'" % image_id
        else:
            print "*" * 80
            print "Error building '%s'" % tag
            print steps
            print "*" * 80
            sys.exit(2)

        return image_id

if __name__ == "__main__":
    if 1 != len(sys.argv):
        usage = "usage: %s" % os.path.split(sys.argv[0])[1]
        print usage
        sys.exit(1)

    docker_client = DockerClient()

    docker_client.build("App-Server-LB", "app_server_lb_img")
    docker_client.build("Nonce-Store", "nonce_store_img")
    docker_client.build("Key-Store", "key_store_img")
    docker_client.build("yar", "yar_img")

    sys.exit(0)
